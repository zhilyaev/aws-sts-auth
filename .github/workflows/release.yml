name: Gorelease

on:
  push:
    tags: ['*']

jobs:
  get-tag:
    runs-on: ubuntu-latest
    steps:
      - name: get pushed tag
        id: pushed
        if: needs.tagger.result != 'success'
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: get created tag
        id: created
        run: echo "::set-output name=tag::$TAG"
        if: needs.tagger.result == 'success'
        env:
          TAG: "${{ needs.tagger.outputs.tag }}"

      - name: combine tags
        id: combined
        run: echo "::set-output name=tag::$CREATED$PUSHED"
        env:
          CREATED: ${{ steps.created.outputs.tag }}
          PUSHED: ${{ steps.pushed.outputs.tag }}
    outputs:
      tag: ${{ steps.combined.outputs.tag }}
      
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ needs.get-tag.outputs.tag }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Cache Go modules
        uses: actions/cache@v2.1.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}
